<?xml version="1.0" encoding="UTF-8"?>

<faqs title="Frequently Asked Questions" toplink="false">

  <part id="general">
    <title>General</title>

    <faq id="large-files">
      <question>
        Can fixedformat4j help me parse large text files?
      </question>
      <answer>
        <p>As the API is now it can't. But on the other hand it doesn't constrain you in anyway either.</p>
        <p>Fixedformat4j currently concentrate on mapping one single line to a java object.
          You are free to loop through any large text file and use the fixedformatmanager to create
          instances of java objects.</p>

        <p>I am  thinking on how to integrate some help for doing this, without putting any constrains
        on how the API is used.</p>
      </answer>
    </faq>
    <faq id="custom-formatter">
      <question>
        I would like to map my own object. Can I apply my own custom formatter to do this?
      </question>
      <answer>
        <p>Yes.</p>
        <p>To map your domain object you should create a custum formatter instance implementing the <a href="http://fixedformat4j.ancientprogramming.com/apidocs/com/ancientprogramming/fixedformat4j/format/FixedFormatter.html">FixedFormatter</a> interface.</p>
        <p>Your custom formatter will have access to all the different annotation data through a FormatInstructions instance.
          Your formatter receives this isntance when the parse and format methods of your formatter is called by the FixedFormatManager.<br />
          Ex. if you would like to access the value given to the FixedFormatPattern annotation you do this through the formatInstruction.getFixedFormatPatternData().getPattern()</p>
        <p>To instruct the manager to use you custom formatter, you set the formatter attribute of the field annotation:</p>
        <p>@Field(offset = 1, length = 10, formatter = CustomFormatter.class)</p>
      </answer>
    </faq>
  </part>

  <!--<part id="install">-->

    <!--<title>Installation</title>-->

    <!--<faq id="how-install">-->
      <!--<question>-->
        <!--How do I install Foo?-->
      <!--</question>-->
      <!--<answer>-->
        <!--<p>some markup goes here</p>-->
      <!--</answer>-->
    <!--</faq>-->

  <!--</part>-->

</faqs>